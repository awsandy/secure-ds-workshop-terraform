#Â File generated by aws2tf see https://github.com/aws-samples/aws2tf
# aws_sagemaker_domain.d-f1ggcpwannta:
resource "aws_sagemaker_domain" "d-f1ggcpwannta" {
  app_network_access_type = "VpcOnly"
  auth_mode               = "IAM"
  domain_name             = "ds-studio-domain"
  lifecycle {
    ignore_changes = [kms_key_id]
  }
  kms_key_id = aws_kms_key.k_f5aba863-306d-4bad-8f9a-6486722726a6.arn
  subnet_ids = [
    aws_subnet.subnet-025daba223195049c.id,
    aws_subnet.subnet-05a180294ca109595.id,
    aws_subnet.subnet-0df410c038106cda9.id,
  ]
  tags = {
    "StackSetName" = "DSSharedServices"
  }
  tags_all = {
    "StackSetName" = "DSSharedServices"
  }
  vpc_id = aws_vpc.vpc-02dd2936ab232ef7e.id

  default_user_settings {
    execution_role = aws_iam_role.ds-default-user-role-DSSharedServices.arn
    security_groups = [
      aws_security_group.sg-02fc8b58ffb52ffb0.id,
    ]

    kernel_gateway_app_settings {
      lifecycle_config_arns = []

      custom_image {
        app_image_config_name = aws_sagemaker_app_image_config.ds-studio-domain.id
        image_name            = aws_sagemaker_image.ds-custom-tensorflow241.id
        image_version_number  = 0
      }

      default_resource_spec {
        instance_type       = "ml.t3.medium"
        sagemaker_image_arn = aws_sagemaker_image.ds-custom-tensorflow241.arn
      }
    }

    sharing_settings {
      notebook_output_option = "Disabled"
    }
  }
}
