#Â File generated by aws2tf see https://github.com/aws-samples/aws2tf
# aws_iam_role.DSSharedServices-ServiceCatalogLaunchRole-068c43b7c593:
resource "aws_iam_role" "DSSharedServices-ServiceCatalogLaunchRole-068c43b7c593" {
  assume_role_policy = jsonencode(
    {
      Statement = [
        {
          Action = "sts:AssumeRole"
          Effect = "Allow"
          Principal = {
            Service = "servicecatalog.amazonaws.com"
          }
        },
      ]
      Version = "2012-10-17"
    }
  )
  force_detach_policies = false
  managed_policy_arns   = []
  max_session_duration  = 3600
  name                  = "DSSharedServices-ServiceCatalogLaunchRole-068c43b7c593"
  path                  = "/"
  tags                  = {}
  tags_all              = {}

  inline_policy {
    name = "SCInlinePolicy"
    policy = jsonencode(
      {
        Statement = [
          {
            Action = [
              "cloudformation:CreateStack",
              "cloudformation:DeleteStack",
              "cloudformation:DescribeStacks",
              "cloudformation:DescribeStackEvents",
              "cloudformation:GetTemplateSummary",
              "cloudformation:ValidateTemplate",
              "codecommit:CreateCommit",
              "codecommit:CreateRepository",
              "codecommit:DeleteRepository",
              "codecommit:GetRepository",
              "codecommit:ListRepositories",
              "codecommit:TagResource",
              "config:DescribeConfigurationRecorderStatus",
              "config:DescribeConfigurationRecorders",
              "ec2:AssociateRouteTable",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CreateRouteTable",
              "ec2:CreateSecurityGroup",
              "ec2:CreateSubnet",
              "ec2:CreateTags",
              "ec2:CreateVpc",
              "ec2:CreateVpcEndpoint",
              "ec2:DeleteRouteTable",
              "ec2:DeleteSecurityGroup",
              "ec2:DeleteSubnet",
              "ec2:DeleteTags",
              "ec2:DeleteVpc",
              "ec2:DeleteVpcEndpoints",
              "ec2:DescribeRouteTables",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeTags",
              "ec2:DescribeVpcEndpoints",
              "ec2:DescribeVpcs",
              "ec2:DisassociateRouteTable",
              "ec2:ModifyVpcAttribute",
              "ec2:RevokeSecurityGroupIngress",
              "ecr:GetAuthorizationToken",
              "ecr:BatchCheckLayerAvailability",
              "ecr:GetDownloadUrlForLayer",
              "ecr:GetRepositoryPolicy",
              "ecr:SetRepositoryPolicy",
              "ecr:DescribeRepositories",
              "ecr:CreateRepository",
              "ecr:DeleteRepository",
              "ecr:DescribeRepository",
              "ecr:ListImages",
              "ecr:PutImage",
              "ecr:DescribeImages",
              "ecr:BatchGetImage",
              "ecr:GetLifecyclePolicy",
              "ecr:GetLifecyclePolicyPreview",
              "ecr:ListTagsForResource",
              "ecr:TagResource",
              "ecr:UntagResource",
              "ecr:DescribeImageScanFindings",
              "ecr:InitiateLayerUpload",
              "ecr:UploadLayerPart",
              "ecr:CompleteLayerUpload",
              "iam:AttachRolePolicy",
              "iam:GetPolicy",
              "iam:CreatePolicy",
              "iam:DeletePolicy",
              "iam:DeletePolicyVersion",
              "iam:CreateRole",
              "iam:DeleteRole",
              "iam:DeleteRolePolicy",
              "iam:DetachRolePolicy",
              "iam:GetRole",
              "iam:GetRolePolicy",
              "iam:ListPolicyVersions",
              "iam:PassRole",
              "iam:PutRolePolicy",
              "iam:CreateServiceLinkedRole",
              "iam:TagRole",
              "kms:CreateAlias",
              "kms:CreateGrant",
              "kms:CreateKey",
              "kms:Decrypt",
              "kms:DeleteAlias",
              "kms:DeleteCustomKeyStore",
              "kms:DeleteImportedKeyMaterial",
              "kms:DescribeKey",
              "kms:EnableKey",
              "kms:EnableKeyRotation",
              "kms:GenerateDataKey",
              "kms:ListAliases",
              "kms:PutKeyPolicy",
              "kms:ScheduleKeyDeletion",
              "kms:TagResource",
              "kms:UpdateAlias",
              "kms:UpdateCustomKeyStore",
              "kms:UpdateKeyDescription",
              "kms:GenerateDataKeyWithoutPlainText",
              "resource-groups:CreateGroup",
              "resource-groups:DeleteGroup",
              "resource-groups:Tag",
              "resource-groups:Untag",
              "s3:CreateBucket",
              "s3:DeleteBucket",
              "s3:DeleteBucketPolicy",
              "s3:GetBucketPolicy",
              "s3:GetEncryptionConfiguration",
              "s3:GetObject",
              "s3:HeadBucket",
              "s3:PutBucketPolicy",
              "s3:PutBucketTagging",
              "s3:PutEncryptionConfiguration",
              "s3:PutBucketPublicAccessBlock",
              "servicecatalog:AssociatePrincipalWithPortfolio",
              "servicecatalog:AssociateProductWithPortfolio",
              "servicecatalog:CreateConstraint",
              "servicecatalog:CreatePortfolio",
              "servicecatalog:CreateProduct",
              "servicecatalog:DeleteConstraint",
              "servicecatalog:DeletePortfolio",
              "servicecatalog:DeleteProduct",
              "servicecatalog:DescribeConstraint",
              "servicecatalog:DescribeProductAsAdmin",
              "servicecatalog:DescribeProvisioningArtifact",
              "servicecatalog:DisassociatePrincipalFromPortfolio",
              "servicecatalog:DisassociateProductFromPortfolio",
              "ssm:AddTagsToResource",
              "ssm:DeleteParameter",
              "ssm:DeleteParameters",
              "ssm:GetParameter",
              "ssm:GetParameters",
              "ssm:PutParameter",
              "ssm:RemoveTagsFromResource",
              "elasticfilesystem:CreateFileSystem",
              "sagemaker:AddTags",
              "sagemaker:CreateDomain",
              "sagemaker:CreateUserProfile",
              "sagemaker:CreateApp",
              "sagemaker:CreateAppImageConfig",
              "sagemaker:CreateImage",
              "sagemaker:CreateImageVersion",
              "sagemaker:DescribeDomain",
              "sagemaker:DescribeImage",
              "sagemaker:DescribeImageVersion",
              "sagemaker:DescribeUserProfile",
              "sagemaker:DeleteDomain",
              "sagemaker:DeleteImage",
              "sagemaker:DeleteImageVersion",
              "sagemaker:DeleteUserProfile",
              "sagemaker:DeleteApp",
              "sagemaker:DeleteNotebookInstance",
              "sagemaker:DeleteAppImageConfig",
              "sagemaker:DeleteTags",
              "sagemaker:ListTags",
              "sagemaker:UpdateAppImageConfig",
              "sagemaker:UpdateNotebookInstanceLifecycleConfig",
              "sagemaker:UpdateDomain",
              "sagemaker:UpdateUserProfile",
              "sagemaker:UpdateImage",
            ]
            Effect   = "Allow"
            Resource = "*"
            Sid      = "Policy1"
          },
          {
            Action = [
              "iam:PassRole",
            ]
            Condition = {
              StringEquals = {
                "iam:PassedToService" = [
                  "sagemaker.amazonaws.com",
                ]
              }
            }
            Effect   = "Allow"
            Resource = "*"
            Sid      = "SageMakerIamPassRole"
          },
        ]
        Version = "2012-10-17"
      }
    )
  }
}
