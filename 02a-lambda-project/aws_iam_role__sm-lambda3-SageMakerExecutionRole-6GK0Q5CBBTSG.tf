#Â File generated by aws2tf see https://github.com/aws-samples/aws2tf
# aws_iam_role.sm-lambda3-SageMakerExecutionRole-6GK0Q5CBBTSG:
resource "aws_iam_role" "sm-lambda3-SageMakerExecutionRole-6GK0Q5CBBTSG" {
  assume_role_policy = jsonencode(
    {
      Statement = [
        {
          Action = "sts:AssumeRole"
          Effect = "Allow"
          Principal = {
            Service = "sagemaker.amazonaws.com"
          }
        },
      ]
      Version = "2012-10-17"
    }
  )
  force_detach_policies = false
  managed_policy_arns = [
    "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess",
    "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess",
    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
    "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
  ]
  max_session_duration = 3600
  name                 = "sm-lambda3-SageMakerExecutionRole-6GK0Q5CBBTSG"
  path                 = "/"
  tags                 = {}
  tags_all             = {}

  inline_policy {
    name = "iam-access"
    policy = jsonencode(
      {
        Statement = [
          {
            Action = [
              "iam:GetRole",
              "iam:GetRolePolicy",
            ]
            Effect   = "Allow"
            Resource = "*"
          },
        ]
        Version = "2012-10-17"
      }
    )
  }
  inline_policy {
    name = "s3-access"
    policy = jsonencode(
      {
        Statement = [
          {
            Action = [
              "s3:GetObject",
              "s3:PutObject",
              "s3:DeleteObject",
              "s3:ListBucket",
            ]
            Effect   = "Allow"
            Resource = "arn:aws:s3:::*"
          },
        ]
        Version = "2012-10-17"
      }
    )
  }
}
